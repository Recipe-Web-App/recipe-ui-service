name: PR Size Labeler

on:
  pull_request:
    types: [opened, reopened, synchronize]

permissions:
  contents: read
  pull-requests: write

jobs:
  label:
    name: Label PR by Size
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Calculate PR size
        id: size
        uses: actions/github-script@v8
        with:
          script: |
            const pr = context.payload.pull_request;
            const additions = pr.additions || 0;
            const deletions = pr.deletions || 0;
            const changes = additions + deletions;

            let size = 'XL';
            let color = 'd73a4a';  // Red

            if (changes < 10) {
              size = 'XS';
              color = '3cbf00';  // Bright green
            } else if (changes < 100) {
              size = 'S';
              color = '5ebf00';  // Green
            } else if (changes < 500) {
              size = 'M';
              color = 'fbca04';  // Yellow
            } else if (changes < 1000) {
              size = 'L';
              color = 'ff9800';  // Orange
            }

            core.setOutput('size', size);
            core.setOutput('label', `size/${size}`);
            core.setOutput('color', color);
            core.setOutput('changes', changes);

            console.log(`PR has ${changes} changes, size: ${size}`);

      - name: Remove old size labels
        uses: actions/github-script@v8
        with:
          script: |
            const labels = ['size/XS', 'size/S', 'size/M', 'size/L', 'size/XL'];
            const currentLabels = context.payload.pull_request.labels.map(l => l.name);

            for (const label of labels) {
              if (currentLabels.includes(label) && label !== '${{ steps.size.outputs.label }}') {
                try {
                  await github.rest.issues.removeLabel({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: context.payload.pull_request.number,
                    name: label
                  });
                } catch (error) {
                  // Label might not exist, ignore
                }
              }
            }

      - name: Add size label
        uses: actions/github-script@v8
        with:
          script: |
            const labelName = '${{ steps.size.outputs.label }}';
            const labelColor = '${{ steps.size.outputs.color }}';

            // Ensure label exists
            try {
              await github.rest.issues.getLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: labelName
              });
            } catch (error) {
              if (error.status === 404) {
                await github.rest.issues.createLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  name: labelName,
                  color: labelColor,
                  description: `PR with ${labelName.split('/')[1]} size`
                });
              }
            }

            // Add label to PR
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              labels: [labelName]
            });

      - name: Comment on large PRs
        if: steps.size.outputs.size == 'XL'
        uses: actions/github-script@v8
        with:
          script: |
            const changes = '${{ steps.size.outputs.changes }}';

            // Check if we already commented
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number
            });

            const botComment = comments.data.find(c =>
              c.user.type === 'Bot' && c.body.includes('Large Pull Request Detected')
            );

            if (!botComment) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: `## üìè Large Pull Request Detected

            This PR has **${changes} lines changed**, which may be difficult to review.

            **Consider:**
            - Breaking this PR into smaller, focused changes
            - Ensuring the PR description clearly explains the changes
            - Highlighting key areas for reviewers to focus on
            - Adding inline comments for complex logic

            **Why smaller PRs are better:**
            - ‚úÖ Faster review cycles
            - ‚úÖ Easier to understand changes
            - ‚úÖ Less likely to introduce bugs
            - ‚úÖ Simpler to revert if needed

            Smaller PRs are easier to review and less likely to introduce bugs! ‚ú®`
              });
            }
